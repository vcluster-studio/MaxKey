<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.dromara.maxkey.persistence.mapper.RoleMemberMapper">

	<sql id="where_statement">
    	<if test="id != null and id != ''">
			and	id	=	#{id}
		</if> 
		<if test="roleName != null and roleName != ''">
			and rolename = #{roleName}
		</if>
    </sql>
    
    <select id="memberInRole" parameterType="RoleMember" resultType="RoleMember">
			select	distinct
				rm.id as id,
				rm.type as type,
				r.id as roleid,
				r.rolename,
				concat(u.displayname,'(',u.username,')') membername,
				u.jobtitle,
				u.gender,
				u.departmentid,
				u.department,
				rm.createddate
			from
				mxk_userinfo u,
				mxk_roles   r,
				mxk_role_member rm
			where	 u.instid   =   #{instId} 
			     and r.instid   =   #{instId} 
			     and rm.instid  =   #{instId} 
			     and	rm.type		in(	'USER','USER-DYNAMIC')
				 and	rm.roleid	=	r.id	
				 and	rm.memberid	=	u.id
				<if test="roleId != null and roleId != ''">
					and rm.roleid = #{roleId}
					and r.id = #{roleId}
				</if>
				<if test="roleName != null and roleName != ''">
					and r.rolename = #{roleName}
				</if>
				<if test="memberName != null and memberName != ''">
					and (
					  u.username like '%${memberName}%'
					  or u.displayname   like  '%${memberName}%'
					)
				</if>
	</select>
	
	
	<select id="memberNotInRole" parameterType="RoleMember" resultType="RoleMember">
		select	distinct
			u.id,
			u.username,
			u.displayname ,
			u.gender,
			u.organization,
			u.departmentid,
			u.department,
			u.jobtitle,
			u.createdby
		from
			mxk_userinfo u
		where
			u.id not in(
       			 select rm.memberid 
       			 from 	mxk_roles r,mxk_role_member rm
			     where  1  =  1
			     <if test="roleId != null and roleId != ''">
					and rm.roleid = #{roleId}
					and r.id = #{roleId}
				</if>
				<if test="roleName != null and roleName != ''">
					and r.rolename = #{roleName}
				</if>
					and	rm.type		in(	'USER','USER-DYNAMIC')
			     	and rm.roleid	=	r.id
			)
		<if test="username != null and username != ''">
			and u.username = #{username}
		</if>
		<if test="displayName != null and displayName != ''">
			and u.displayname   like  '%${displayName}%'
		</if>
		
	</select>
	
	<select id="rolesNoMember" parameterType="RoleMember" resultType="Roles">
        select  distinct
            r.*
        from
            mxk_roles r
        where
            r.id not in(
                select 
                    rm.roleid 
                from mxk_role_member rm,mxk_userinfo u
                where rm.memberid = u.id
                <if test="username != null and username != ''">
		           and u.username = #{username}
		        </if>
		        <if test="memberId != null and memberId != ''">
                   and rm.memberid = #{memberid}
                </if>
            )
        <if test="roleName != null and roleName != ''">
            and r.rolename = #{roleName}
        </if>
    </select>
	
	<!-- ROLE_MEMBER  ROLE Member-->
	<select id="roleMemberInRole" parameterType="RoleMember" resultType="Roles">
		select	distinct
			ig.*
		from
			mxk_roles ir,
			mxk_roles r,
			mxk_role_member rm
		where
			 1	=	1
			and rm.roleid	=	g.id	
			and	rm.memberid	=	ig.id
			and	rm.type		=	'ROLE'
		<if test="roleId != null and roleId != ''">
			and rm.roleid = #{roleId}
			and r.id = #{roleId}
		</if>
		<if test="roleName != null and roleName != ''">
			and r.rolename = #{roleName}
		</if>
	</select>

	<update id="addDynamicRoleMember" parameterType="Roles" >
    	insert into mxk_role_member(
    		id,
    		roleid,
    		memberid,
    		type,
    		instid
    	)
    	select 
    		concat('${id}_',u.id) id,
    		'${id}' roleid,
    		u.id memberid,
    		'USER-DYNAMIC' type,
    		'${instId}' instid
    	from mxk_userinfo u
		where not exists(
				select  1 from mxk_role_member rm 
				where rm.roleid=#{id}
					and rm.memberid=u.id
					and rm.type='USER-DYNAMIC'
			)
		<if test="filters != null and filters != ''">
				and (${filters})
		</if>
		<if test="orgIdsList != null and orgIdsList != ''">
				and u.departmentid in( ${orgIdsList})
		</if>
    </update>
    
    <delete id="deleteDynamicRoleMember" parameterType="Roles" >
    	delete from mxk_role_member rm
    	where type = 'user-dynamic'
    		and rm.roleid=#{id}
    		and not exists(
		    	select 1
		    	from mxk_userinfo u
		    	where 1 = 1 
		    		and u.id=rm.memberid
				<if test="filters != null and filters != ''">
						and (${filters})
				</if>
				<if test="orgIdsList != null and orgIdsList != ''">
						and u.departmentid in ( ${orgIdsList})
				</if>
			)
    </delete>
    
    <select id="queryMemberByRoleId" parameterType="string"  resultType="UserInfo">
            select  distinct
                r.roleId,
                r.roleName,
                u.id,
                u.username,
                u.usertype,
                u.windowsaccount,
                
                u.displayname ,
                u.nickname ,
                u.namezhspell,
                u.namezhshortspell,
                u.givenname ,
                u.middlename ,
                u.familyname ,
                
                u.gender,
    
                u.authntype,
                u.mobile,
                u.email,
                u.workemail,
                u.workphonenumber,
    
                u.employeenumber,
                u.division,
                u.costcenter,
                u.organization,
                u.departmentid,
                u.department,
                u.jobtitle,
                u.joblevel,
                rm.createddate,
                u.status
            from
                mxk_userinfo u,
                mxk_roles   r,
                mxk_role_member rm
            where   1   =   1
                    and rm.roleid  = #{value}
                    and g.id        = #{value}
                    and rm.type     in( 'USER','USER-DYNAMIC')
                    and rm.roleid  =   r.id    
                    and rm.memberid =   u.id
    </select>
    
    
    <delete id="deleteByRoleId" parameterType="string" >
    	delete from mxk_role_member rm
    	where  rm.roleid = #{value} and rolecode != 'ROLE_ALL_USER'
    </delete>
	
</mapper>